apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'groovy'
if(project.hasProperty('signing.keyId'))
    apply plugin: 'signing'

group = 'org.phoenixframework.channels'
version = '0.1.0-SNAPSHOT'
sourceCompatibility = '1.7.0'

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.fasterxml.jackson.core:jackson-databind:2.5.3'
    compile 'com.squareup.okhttp:okhttp-ws:2.7.2'
    testCompile 'org.codehaus.groovy:groovy-all:2.3.10'
    testCompile "org.spockframework:spock-core:1.0-groovy-2.3"

    // optional dependencies for using Spock
    testRuntime "org.hamcrest:hamcrest-core:1.3" // only necessary if Hamcrest matchers are used
    testRuntime "cglib:cglib-nodep:3.1"          // allows mocking of classes (in addition to interfaces)
    testRuntime "org.objenesis:objenesis:2.1"    // allows mocking of classes without default constructor (together with CGLIB)
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task runGroovyTest (dependsOn: 'classes', type: JavaExec) {
    main = 'SimpleCliTest'
    classpath = sourceSets.main.runtimeClasspath
    systemProperty 'java.util.logging.config.file', 'src/main/resources/logging.properties'
    standardInput = System.in
}

repositories {
    mavenCentral()
}

artifacts {
    archives javadocJar, sourcesJar
}

if(project.hasProperty('signing.keyId'))
signing {
    sign configurations.archives
}

if(project.hasProperty('ossrhUsername') && project.hasProperty('ossrhPassword'))
uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'Java Library for Phoenix Channel Clients'
                packaging 'jar'
                description 'Java Library for Phoenix Channel Clients'
                url 'https://github.com/eoinsha/JavaPhoenixChannels'

                scm {
                    connection 'scm:git:git://github.com/eoinsha/JavaPhoenixChannels.git'
                    developerConnection 'scm:git:git@github.com:eoinsha/JavaPhoenixChannels.git'
                    url 'https://github.com/eoinsha/JavaPhoenixChannels'
                }

                licenses {
                    license {
                        name 'Modified BSD License'
                        url 'http://directory.fsf.org/wiki/License:BSD_3Clause'
                    }
                }

                developers {
                    developer {
                        id 'eoinsha'
                        name 'Eoin Shanaghy'
                    }
                }
            }
        }
    }
}